#source "prueba.txt" 

call main
halt

#type Pareja : {
entero : int
caracter : byte
}

#global pareja:Pareja
#type Empleado : {
edad : int
}
#type Empresa : {
empleados : 2*Empleado
}

#global acme:2*Empresa

#global fibonacci:8*3*int

#func p
p:

#line 22
ENTER 0
#ret void
ret 0,0,0

#func f
f:

#line 25

#param paramReal:float

#param paramInt:int

#local localReal:float

#local digito:byte

#local resultado:int
ENTER 7

#line 30
pusha bp
push -4
add
pusha bp
push 6
add
loadf
pushf 10.0
mulf
storef

#line 31
pusha bp
push -5
add
pushb 48
storeb

#line 32
pusha bp
push 4
add
loadi
pushi 256
lti
JZ else0

#line 33
pusha bp
push -5
add
pusha bp
push 4
add
loadi
i2b
storeb

#line 34
pusha bp
push -7
add
pusha bp
push -5
add
loadb
b2i
storei
JMP finIfElse0
else0:

#line 37
pusha bp
push -7
add
pusha bp
push -4
add
loadf
f2i
storei
finIfElse0:

 #line 39
pusha bp
push -7
add
loadi
RET 2, 7, 6
#ret int

#func inicializa
inicializa:

#line 43

#local i:int
ENTER 2

#line 46
pusha 11
pushi 0
push 6
mul
add
pushi 0
push 2
mul
add
pushi 0
storei

#line 47
pusha 11
pushi 0
push 6
mul
add
pushi 1
push 2
mul
add
pushi 1
storei

#line 48
pusha 11
pushi 0
push 6
mul
add
pushi 2
push 2
mul
add
pushi 1
storei

#line 49
pusha bp
push -2
add
pushi 1
storei


#line 50
inicioWhile1:
pusha bp
push -2
add
loadi
pushi 8
lti
JZ finalWhile1

#line 51
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 0
push 2
mul
add
pusha 11
pusha bp
push -2
add
loadi
pushi 1
subi
push 6
mul
add
pushi 1
push 2
mul
add
LOADi
storei

#line 52
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 1
push 2
mul
add
pusha 11
pusha bp
push -2
add
loadi
pushi 1
subi
push 6
mul
add
pushi 2
push 2
mul
add
LOADi
storei

#line 53
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 2
push 2
mul
add
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 0
push 2
mul
add
LOADi
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 1
push 2
mul
add
LOADi
addi
storei

#line 54
pusha bp
push -2
add
pusha bp
push -2
add
loadi
pushi 1
addi
storei
JMP inicioWhile1
finalWhile1:
#ret void
ret 0,2,0

#func main
main:

#line 60

#local i:int

#local j:int
ENTER 4


#line 64
CALL p

#line 66
pusha bp
push -2
add
pushi 0
storei

#line 67
pusha 0
push 2
add
pushb 48
storeb

#line 68
pusha 0
push 0
add
pushb 48
b2i
storei

#line 70

#line 70
pusha bp
push -2
add
loadi
i2f
pusha 0
push 2
add
loadb
b2i
CALL f
OUTi

#line 71
pushb 92
OUTb


#line 72
pushf 1.3
pushi 2
CALL f
POPi


#line 74
CALL inicializa

#line 75
pusha bp
push -2
add
pushi 0
storei


#line 76
inicioWhile2:
pusha bp
push -2
add
loadi
pushi 8
lti
JZ finalWhile2

#line 77
pushb 40
OUTb

#line 78
pusha bp
push -2
add
loadi
pushi 1
addi
OUTi

#line 79
pushb 41
OUTb

#line 80
pushb 32
OUTb

#line 81
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 0
push 2
mul
add
LOADi
OUTi

#line 82
pushb 43
OUTb

#line 83
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 1
push 2
mul
add
LOADi
OUTi

#line 84
pushb 61
OUTb

#line 85
pusha 11
pusha bp
push -2
add
loadi
push 6
mul
add
pushi 2
push 2
mul
add
LOADi
OUTi

#line 86
pushb 92
OUTb

#line 87
pusha bp
push -2
add
pusha bp
push -2
add
loadi
pushi 1
addi
storei
JMP inicioWhile2
finalWhile2:

#line 90
pusha 3
pushi 1
push 4
mul
add
push 0
add
pushi 1
push 2
mul
add
push 0
add
pushi 56
storei

#line 91
pusha 3
pushi 1
push 4
mul
add
push 0
add
pushi 1
push 2
mul
add
push 0
add
loadi
OUTi
pushb 10
OUTb

#line 92
pushb 92
OUTb
pushb 10
OUTb

#line 94
pusha bp
push -2
add
pushi 0
storei


#line 95
inicioWhile3:
pusha bp
push -2
add
loadi
pushi 2
lti
JZ finalWhile3

#line 96
pusha bp
push -4
add
pushi 0
storei


#line 97
inicioWhile4:
pusha bp
push -4
add
loadi
pushi 2
lti
JZ finalWhile4

#line 98
pusha 3
pusha bp
push -2
add
loadi
push 4
mul
add
push 0
add
pusha bp
push -4
add
loadi
push 2
mul
add
push 0
add
pusha bp
push -2
add
loadi
pusha bp
push -4
add
loadi
addi
storei

#line 99
pusha bp
push -4
add
pusha bp
push -4
add
loadi
pushi 1
addi
storei
JMP inicioWhile4
finalWhile4:

#line 101
pusha bp
push -2
add
pusha bp
push -2
add
loadi
pushi 1
addi
storei
JMP inicioWhile3
finalWhile3:

#line 105
pusha bp
push -2
add
pushi 0
storei


#line 106
inicioWhile5:
pusha bp
push -2
add
loadi
pushi 2
lti
JZ finalWhile5

#line 107
pusha bp
push -4
add
pushi 0
storei


#line 108
inicioWhile6:
pusha bp
push -4
add
loadi
pushi 2
lti
JZ finalWhile6

#line 109
pusha 3
pusha bp
push -2
add
loadi
push 4
mul
add
push 0
add
pusha bp
push -4
add
loadi
push 2
mul
add
push 0
add
loadi
OUTi
pushb 10
OUTb

#line 110
pushb 32
OUTb
pushb 10
OUTb

#line 111
pusha bp
push -4
add
pusha bp
push -4
add
loadi
pushi 1
addi
storei
JMP inicioWhile6
finalWhile6:

#line 113
pusha bp
push -2
add
pusha bp
push -2
add
loadi
pushi 1
addi
storei
JMP inicioWhile5
finalWhile5:
#ret void
ret 0,4,0
